---
description: 
globs: 
alwaysApply: false
---
# Azure Terraform Configuration Rules

## Table of Contents
1. [File Organization](mdc:#file-organization)
2. [Azure-Specific Naming Conventions](mdc:#azure-specific-naming-conventions)
3. [Azure Security Best Practices](mdc:#azure-security-best-practices)
4. [Azure Networking Best Practices](mdc:#azure-networking-best-practices)
5. [Azure Storage Configuration](mdc:#azure-storage-configuration)
6. [Azure Monitoring and Logging](mdc:#azure-monitoring-and-logging)
7. [Azure Cost Management](mdc:#azure-cost-management)
8. [Azure Backup and Recovery](mdc:#azure-backup-and-recovery)
9. [Best Practices for Azure Resources](mdc:#best-practices-for-azure-resources)

## File Organization

### Project Structure
```
terraform-azure-project/
├── providers.tf          # Azure Provider and Azure-specific configurations
├── backend.tf           # Azure Storage backend configuration
├── versions.tf          # Azure provider version constraints
├── variables.tf         # Input variables
├── outputs.tf          # Output definitions
├── locals.tf           # Local variables
├── terraform.tfvars    # Variable values
├── data.tf            # Azure data sources
│
# Resource Group
├── resource_groups.tf  # Resource group definitions
│
# Networking
├── vnet.tf            # Virtual Network configuration
├── subnets.tf         # Subnet configurations
├── nsg.tf             # Network Security Groups
├── route_tables.tf    # Route tables and routes
├── private_links.tf   # Private Link configurations
├── app_gw.tf         # Application Gateway
├── load_balancer.tf  # Azure Load Balancer
│
# Security
├── key_vault.tf      # Key Vault and secrets
├── managed_id.tf     # Managed Identities
├── rbac.tf          # Role assignments
├── policies.tf      # Azure Policies
│
# Compute
├── vm.tf            # Virtual Machines
├── vmss.tf          # Virtual Machine Scale Sets
├── aks.tf           # Azure Kubernetes Service
├── app_service.tf   # App Services and Plans
├── functions.tf     # Azure Functions
│
# Storage
├── storage.tf       # Storage Accounts
├── sql.tf          # Azure SQL Database
├── cosmos.tf       # Cosmos DB
├── redis.tf        # Azure Cache for Redis
│
# Integration
├── service_bus.tf   # Service Bus
├── event_hub.tf    # Event Hub
├── event_grid.tf   # Event Grid
│
# Monitoring
├── monitor.tf      # Azure Monitor
├── log_analytics.tf # Log Analytics
├── app_insights.tf # Application Insights
├── alerts.tf      # Alert rules
```

## Azure-Specific Naming Conventions

### 1. Resource Naming Pattern
```hcl
locals {
  # Standard Azure resource prefix
  prefix = "${var.project}-${var.environment}-${data.azurerm_resource_group.main.location}"
  
  # Common Azure tags
  common_tags = {
    Project     = var.project
    Environment = var.environment
    ManagedBy   = "terraform"
    Owner       = var.team
    CostCenter  = var.cost_center
  }
}

# Example resource names
resource "azurerm_storage_account" "logs" {
  name                = replace("${local.prefix}logs", "-", "")  # Remove hyphens for storage accounts
  resource_group_name = azurerm_resource_group.main.name
  # ... configuration
}

resource "azurerm_key_vault" "main" {
  name                = "${local.prefix}-kv"
  resource_group_name = azurerm_resource_group.main.name
  # ... configuration
}
```

### 2. Azure-Specific Variable Validation

```hcl
# VM Size Validation
variable "vm_size" {
  type        = string
  description = "Azure VM size"
  
  validation {
    condition     = can(regex("^(Standard_D|Standard_F|Standard_E|Standard_B)", var.vm_size))
    error_message = "VM size must be a valid Azure VM size."
  }
}

# Storage Account Name Validation
variable "storage_name" {
  type        = string
  description = "Storage account name"
  
  validation {
    condition     = can(regex("^[a-z0-9]{3,24}$", var.storage_name))
    error_message = "Storage account name must be 3-24 characters long and contain only lowercase letters and numbers."
  }
}

# Key Vault Name Validation
variable "key_vault_name" {
  type        = string
  description = "Key Vault name"
  
  validation {
    condition     = can(regex("^[a-zA-Z0-9-]{3,24}$", var.key_vault_name))
    error_message = "Key Vault name must be 3-24 characters long and contain only alphanumeric characters and hyphens."
  }
}
```

## Azure Security Best Practices

### 1. Key Vault Configuration
```hcl
# Key Vault with Best Practices
resource "azurerm_key_vault" "main" {
  name                = "${local.prefix}-kv"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  tenant_id          = data.azurerm_client_config.current.tenant_id
  
  sku_name = "premium"
  
  enabled_for_disk_encryption = true
  purge_protection_enabled    = true
  soft_delete_retention_days  = 90
  
  network_acls {
    default_action = "Deny"
    bypass         = "AzureServices"
    ip_rules       = var.allowed_ip_ranges
  }
  
  tags = local.common_tags
}

# Key Vault Access Policy
resource "azurerm_key_vault_access_policy" "app" {
  key_vault_id = azurerm_key_vault.main.id
  tenant_id    = data.azurerm_client_config.current.tenant_id
  object_id    = azurerm_user_assigned_identity.app.principal_id
  
  key_permissions = [
    "Get",
    "List"
  ]
  
  secret_permissions = [
    "Get",
    "List"
  ]
  
  certificate_permissions = [
    "Get",
    "List"
  ]
}
```

### 2. Network Security Group Rules
```hcl
# NSG with Specific Rules
resource "azurerm_network_security_group" "app" {
  name                = "${local.prefix}-app-nsg"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location

  # Inbound rules
  security_rule {
    name                       = "allow-https"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range         = "*"
    destination_port_range    = "443"
    source_address_prefix     = "AzureLoadBalancer"
    destination_address_prefix = "VirtualNetwork"
  }

  tags = local.common_tags
}
```

## Azure Networking Best Practices

### 1. Virtual Network Configuration
```hcl
# VNet with Subnets
resource "azurerm_virtual_network" "main" {
  name                = "${local.prefix}-vnet"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  address_space       = [var.vnet_cidr]
  
  tags = local.common_tags
}

# Subnet Configuration
resource "azurerm_subnet" "private" {
  name                 = "${local.prefix}-private"
  resource_group_name  = azurerm_resource_group.main.name
  virtual_network_name = azurerm_virtual_network.main.name
  address_prefixes     = [var.private_subnet_cidr]
  
  enforce_private_link_endpoint_network_policies = true
  service_endpoints = [
    "Microsoft.KeyVault",
    "Microsoft.Storage",
    "Microsoft.Sql"
  ]
}
```

## Azure Storage Configuration

### 1. Storage Account Configuration
```hcl
# Storage Account with Best Practices
resource "azurerm_storage_account" "main" {
  name                     = replace("${local.prefix}sa", "-", "")
  resource_group_name      = azurerm_resource_group.main.name
  location                 = azurerm_resource_group.main.location
  account_tier             = "Standard"
  account_replication_type = "GRS"
  
  min_tls_version                 = "TLS1_2"
  enable_https_traffic_only       = true
  allow_nested_items_to_be_public = false
  
  network_rules {
    default_action = "Deny"
    bypass         = ["AzureServices"]
    ip_rules       = var.allowed_ip_ranges
  }
  
  tags = local.common_tags
}

# Private Endpoint for Storage Account
resource "azurerm_private_endpoint" "storage" {
  name                = "${local.prefix}-storage-pe"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  subnet_id           = azurerm_subnet.private.id
  
  private_service_connection {
    name                           = "${local.prefix}-storage-psc"
    private_connection_resource_id = azurerm_storage_account.main.id
    subresource_names             = ["blob"]
    is_manual_connection          = false
  }
  
  tags = local.common_tags
}
```

## Azure Monitoring and Logging

### 1. Azure Monitor Configuration
```hcl
# Log Analytics Workspace
resource "azurerm_log_analytics_workspace" "main" {
  name                = "${local.prefix}-law"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  sku                 = "PerGB2018"
  retention_in_days   = 30
  
  tags = local.common_tags
}

# Application Insights
resource "azurerm_application_insights" "main" {
  name                = "${local.prefix}-appinsights"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  workspace_id        = azurerm_log_analytics_workspace.main.id
  application_type    = "web"
  
  tags = local.common_tags
}

# Metric Alert
resource "azurerm_monitor_metric_alert" "cpu_high" {
  name                = "${local.prefix}-cpu-high"
  resource_group_name = azurerm_resource_group.main.name
  scopes              = [azurerm_virtual_machine_scale_set.app.id]
  description         = "CPU utilization is too high"
  
  criteria {
    metric_namespace = "Microsoft.Compute/virtualMachineScaleSets"
    metric_name      = "Percentage CPU"
    aggregation      = "Average"
    operator         = "GreaterThan"
    threshold        = 80
  }
  
  action {
    action_group_id = azurerm_monitor_action_group.main.id
  }
  
  tags = local.common_tags
}
```

## Azure Cost Management

### 1. Cost Management Configuration
```hcl
# Budget Alert
resource "azurerm_consumption_budget_resource_group" "main" {
  name              = "${local.prefix}-budget"
  resource_group_id = azurerm_resource_group.main.id
  
  amount     = var.monthly_budget
  time_grain = "Monthly"
  
  notification {
    enabled   = true
    threshold = 90.0
    operator  = "GreaterThan"
    
    contact_emails = [
      var.alert_email
    ]
  }
}

# Cost Management Export
resource "azurerm_cost_management_export_resource_group" "main" {
  name                    = "${local.prefix}-cost-export"
  resource_group_id       = azurerm_resource_group.main.id
  recurrence_type        = "Monthly"
  recurrence_period_start = timeadd(timestamp(), "P1D")
  recurrence_period_end   = timeadd(timestamp(), "P365D")
  
  delivery_info {
    storage_account_id = azurerm_storage_account.main.id
    container_name     = "cost-exports"
    root_folder_path   = "/"
  }
  
  query {
    type       = "Usage"
    time_frame = "MonthToDate"
  }
}
```

## Azure Backup and Recovery

### 1. Backup Configuration
```hcl
# Recovery Services Vault
resource "azurerm_recovery_services_vault" "main" {
  name                = "${local.prefix}-rsv"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  sku                 = "Standard"
  
  soft_delete_enabled = true
  
  tags = local.common_tags
}

# Backup Policy
resource "azurerm_backup_policy_vm" "daily" {
  name                = "${local.prefix}-vm-backup-policy"
  resource_group_name = azurerm_resource_group.main.name
  recovery_vault_name = azurerm_recovery_services_vault.main.name
  
  timezone = "UTC"
  
  backup {
    frequency = "Daily"
    time      = "23:00"
  }
  
  retention_daily {
    count = 30
  }
  
  retention_weekly {
    count    = 4
    weekdays = ["Sunday"]
  }
  
  retention_monthly {
    count    = 12
    weekdays = ["Sunday"]
    weeks    = ["First"]
  }
}
```

## Best Practices for Azure Resources

1. **Resource Organization**
   - Use resource groups effectively
   - Implement proper naming conventions
   - Follow Azure service limits
   - Use tags for resource organization

2. **Security**
   - Use Key Vault for secrets management
   - Implement RBAC properly
   - Enable diagnostic settings
   - Use Private Endpoints where possible

3. **Networking**
   - Plan address spaces carefully
   - Use NSGs effectively
   - Implement proper routing
   - Use service endpoints

4. **Monitoring**
   - Enable Azure Monitor
   - Configure Log Analytics
   - Set up Application Insights
   - Create proper alert rules

5. **Cost Management**
   - Use appropriate SKUs
   - Implement auto-scaling
   - Set up budgets and alerts
   - Monitor costs regularly
